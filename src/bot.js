require('dotenv').config();
const { Client, IntentsBitField } = require("discord.js")
const { joinVoiceChannel, createAudioPlayer, NoSubscriberBehavior, createAudioResource, StreamType } = require('@discordjs/voice');
const ytdl = require('ytdl-core');



const client = new Client({
    intents: [
        IntentsBitField.Flags.Guilds,
        IntentsBitField.Flags.GuildMembers,
        IntentsBitField.Flags.GuildMessages,
        IntentsBitField.Flags.GuildVoiceStates,
        IntentsBitField.Flags.MessageContent
    ]
})

const audioPlayer = createAudioPlayer({
    behaviors: {
        noSubscriber: NoSubscriberBehavior.Pause,
    },
});

client.on('ready',(c)=>{
console.log(`‚úÖüé∏ @${c.user.tag} is online`)
}
)

client.on('messageCreate',(message)=>{
    console.log(`üó£Ô∏è @${message.author.tag} said \"${message.content}\" in channel \'${message.channel.name}\'`)
    if(message.content.startsWith("!play"))
    {
        const voiceChannel = message.member.voice.channel;
        const member = message.guild.members.cache.get(message.author.id)
        // Extract the command and arguments
        const [command, ...args] = message.content.split(' ');
         
        if (args.length === 0) {
            message.reply("Amigo, necesitas especificar qu√© jugar.");
        } else {
            if(member.voice.channel)
            {
                if(args[0].startsWith("https://www.youtu")) //https://youtube and https://youtu.be 
                {
                    console.log(`üî¥USING YTDL for ${args[0]}`);
                    const stream = ytdl(args[0], { filter: 'audioonly' }); // Use ytdl-core to get the audio stream
                    stream.on('error', (error) => {
                        console.error(`ytdl-core error: ${error.message}`);
                    });
                    const connection = joinVoiceChannel({
                        channelId: voiceChannel.id,
                        guildId: voiceChannel.guild.id,
                        adapterCreator: voiceChannel.guild.voiceAdapterCreator,
                    });
                    const resource = createAudioResource(stream, { inputType: StreamType.Arbitrary });
                    console.log(resource);
                    audioPlayer.play(resource);
                    connection.subscribe(audioPlayer);
                }
                else{
                    console.log(`üîµDirect MP3 File from ${args[0]}`);
                    const stream = createAudioResource(args[0], {
                        inputType: StreamType.Arbitrary,
                        //ffmpeg: "D:\\Programs\\FFmpeg\\bin\\ffmpeg.exe"
                    });
                    const connection = joinVoiceChannel({
                        channelId: voiceChannel.id,
                        guildId: voiceChannel.guild.id,
                        adapterCreator: voiceChannel.guild.voiceAdapterCreator,
                    });
                    
                    audioPlayer.play(stream);
                    connection.subscribe(audioPlayer);
                }
                console.log(`üéôÔ∏è joined ${member.voice.channel.name} voice channel`);
                //console.error("‚ùåüéôÔ∏è couldn't join voice channel error: " + err);
            }
            else
            {
                message.reply("Amigo, √∫nete a un canal de voz primero.");
            }
        }
    }
    //TODO: fix later
    if (message.content === '!join') {
        const voiceChannel = message.member.voice.channel;
        const member = message.guild.members.cache.get(message.author.id)
        if (!voiceChannel) {
            return message.channel.send("Amigo, √∫nete a un canal de voz primero.");
        }
        const connection = joinVoiceChannel({
            channelId: voiceChannel.id,
            guildId: voiceChannel.guild.id,
            adapterCreator: voiceChannel.guild.voiceAdapterCreator,
        });
        console.log(`üö™Joined ${voiceChannel.name}`);
    }


}
)

client.login(process.env.TOKEN)